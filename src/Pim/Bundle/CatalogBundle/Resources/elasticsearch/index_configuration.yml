mappings:
    pim_catalog_product:
        properties:
            # "completeness" property is handled by the "completeness" dynamic template
            categories:
                type: 'keyword'
            family:
                type: 'keyword'
            enabled:
                type: 'boolean'
            groups:
                type: 'keyword'
            identifier:
                type: 'keyword'
                normalizer: 'varchar_normalizer'
        dynamic_templates:
            -
                text_area:
                    path_match: 'values.*-text.*'
                    match_mapping_type: 'string'
                    mapping:
                        fields:
                            raw:
                                type: 'keyword'
                                normalizer: 'text_normalizer'
                        type: 'text'
                        analyzer: 'text_analyzer'
            -
                text:
                    path_match: 'values.*-varchar.*'
                    match_mapping_type: 'string'
                    mapping:
                        type: 'keyword'
                        normalizer: 'varchar_normalizer'
            -
                completeness:
                     path_match: 'completeness.*'
                     match_mapping_type: 'long'
                     mapping:
                         type: 'integer'
            -
                decimal:
                    path_match: 'values.*-decimal.*'
                    match_mapping_type: 'string'
                    mapping:
                        type: 'double'

settings:
    analysis:
        normalizer:
            text_normalizer:
                # Value is htmlstripped and newline pattern processed prior to indexing (in the PIM)
                # ES Normalizers is an experimental feature and they do not support
                # html_strip and newlinepattern filters yet.
                # see https://www.elastic.co/guide/en/elasticsearch/reference/5.2/analysis-normalizers.html#analysis-normalizers
                filter: ['lowercase']
                char_filter: []
                type: 'custom'
            varchar_normalizer:
                filter: ['lowercase']
        char_filter:
            newline_pattern:
                pattern: '\\n'
                type: 'pattern_replace'
                replacement: ''
        analyzer:
            text_analyzer:
                filter: ['lowercase']
                char_filter: ['html_strip', 'newline_pattern']
                type: 'custom'
                tokenizer: 'standard'
